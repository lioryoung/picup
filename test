package com.example.mytest;

import android.Manifest;
import android.accounts.NetworkErrorException;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Environment;
import android.provider.MediaStore;
import android.provider.SyncStateContract;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import com.example.mytest.utils.ImgCutUtil;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.Headers;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class Test2Activity extends AppCompatActivity {
    private static final int MY_PERMISSIONS_REQUEST_CALL_PHONE2 = 7;
    //TODO 裁剪后图片本地缓存路径（用系统裁剪）
    private String imageCropedCachePath = Environment.getExternalStorageDirectory() + "/test.jpg";
    //TODO 裁剪后图片本地缓存路径Uri（用系统裁剪）
    private Uri imageCropedCacheUri = Uri.parse("file://" + imageCropedCachePath);
    private Button button;
    private ImageView imageView;
    private Uri imguri;
    private Intent intent;
    private String uri="xxx";
    Bitmap bitmap;
    ByteArrayOutputStream bos;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_test);
        button=(Button)findViewById(R.id.testbt);
        imageView=(ImageView)findViewById(R.id.pic);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ContextCompat.checkSelfPermission(Test2Activity.this,
                        Manifest.permission.WRITE_EXTERNAL_STORAGE)
                        != PackageManager.PERMISSION_GRANTED) {
                    ActivityCompat.requestPermissions(Test2Activity.this,
                            new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
                            MY_PERMISSIONS_REQUEST_CALL_PHONE2);
                }
                else
                {
                    choosePhoto();
                }
            }
        });
    }

    public void choosePhoto(){
        //TODO 左起参数为：选择行为权限，系统本地相册URI路径
        intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
//TODO 向onActivityResult发送intent，requestCode为GET_PIC_FROM_GALLERY
        startActivityForResult(intent, 1);
    }
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case 1://TODO 从图库选取图片回调
                if (resultCode == RESULT_OK) {
                    /*TODO 获得图片*/
                    Uri uri = data.getData();//TODO 图片Uri
                    intent = ImgCutUtil.cropImage(uri, imageCropedCacheUri, 3, 1, 700, 200);
                    startActivityForResult(intent, 2);
                }
                break;
            case 2://TODO 调用系统的图片裁剪回调
                if (resultCode == RESULT_OK) {
                    try {
                        bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), imageCropedCacheUri);
                        imageView.setImageBitmap(bitmap);
                        //Log.e("Tag",imageCropedCacheUri.toString());
                        uploadFile();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                break;
        }
    }
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)
    {
        if (requestCode == MY_PERMISSIONS_REQUEST_CALL_PHONE2)
        {
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)
            {
                choosePhoto();
            } else
            {
                // Permission Denied
                Toast.makeText(Test2Activity.this, "Permission Denied", Toast.LENGTH_SHORT).show();
            }
        }
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }

    //图片上床
    public void uploadFile() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                OkHttpClient client=new OkHttpClient();

                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

                bitmap.compress(Bitmap.CompressFormat.JPEG,100,byteArrayOutputStream);

                MultipartBody.Builder builder = new MultipartBody.Builder().setType(MultipartBody.FORM)
                        //.addPart(Headers.of("Content-Disposition", "form-data; name=\"file\""),null)
                        .addPart(Headers.of("Content-Disposition", "form-data; name=\"file\"; filename=\"2.jpg\""), RequestBody.create(MediaType.parse("image/jpeg"),byteArrayOutputStream.toByteArray()));
                //有多个图片就用for循环添加即可

                MultipartBody build = builder.build();

                okhttp3.Request bi = new okhttp3.Request.Builder()
                        .url(uri)
                        .post(build)
                        .build();
                client.newCall(bi).enqueue(new Callback() {
                    @Override
                    public void onFailure(Call call, IOException e) {
                        Log.i("TAG", "onFailure: 失败");
                    }

                    @Override
                    public void onResponse(Call call, okhttp3.Response response) throws IOException {
                        Log.i("TAG", "onResponse: " + response.body().string());
                        //提交成功处理结果....
                    }
                });




           /**/ }
        }).start();
    }
}
